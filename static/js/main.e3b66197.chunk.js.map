{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.jsx"],"names":["ContactForm","state","name","number","handleChange","e","target","setState","value","handleSubmit","evt","preventDefault","nameChecking","alert","props","onAddContact","check","this","contacts","forEach","stateContact","toLowerCase","onSubmit","type","placeholder","onChange","Component","Filter","onHandleFilter","ContactListItem","itemName","itemNumber","onRemoveItem","onClick","ContactList","visibleContacts","onRemove","map","id","key","App","filter","addContact","contact","uuidv4","prevState","getVisibleTasks","includes","handleFilter","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"yQAGqBA,E,4MACjBC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAEZC,aAAe,SAAAC,GAAM,IACXH,EAASG,EAAEC,OAAXJ,KACR,EAAKK,SAAL,eAAiBL,EAAOG,EAAEC,OAAOE,S,EAanCC,aAAe,SAAAC,GACbA,EAAIC,iBAEF,EAAKC,eAAgBC,MAAM,GAAD,OAAI,EAAKD,eAAT,2BAC1B,EAAKE,MAAMC,aAAa,EAAKd,MAAMC,KAAM,EAAKD,MAAME,S,6DAdvC,IAAD,OACRa,GAAQ,EAMR,OALJC,KAAKH,MAAMI,SAASC,SAAQ,SAAAC,GACpBA,EAAalB,KAAKmB,gBAAkB,EAAKpB,MAAMC,KAAKmB,gBACvDL,EAAQ,EAAKf,MAAMC,SAGbc,I,+BAWX,OACI,oCACI,0BACIM,SAAUL,KAAKR,cAEf,+BACI,mCACA,2BACIP,KAAK,OACLqB,KAAK,OACLC,YAAY,aACZC,SAAUR,KAAKb,gBAGvB,+BACI,qCACA,2BACIF,KAAK,SACLqB,KAAK,OACLC,YAAY,eACZC,SAAUR,KAAKb,gBAGvB,4BAAQmB,KAAK,UAAb,sB,GAnDqBG,aCD1B,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,eAE7B,OACI,oCACI,oDACA,2BACI1B,KAAK,SACLqB,KAAK,OACLE,SAAU,SAAApB,GAAC,OAAIuB,EAAevB,OCR/B,SAASwB,EAAT,GAAiE,IAArCC,EAAoC,EAApCA,SAASC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aAE5D,OACI,oCACA,4BACI,2BAAIF,EAAJ,KAAgBC,GAChB,8BACA,4BAAQR,KAAK,SAASU,QAASD,GAA/B,iDCNG,SAASE,EAAT,GAAoD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,SAEnD,OACI,oCACI,4BACKD,EAAgBE,KAAI,gBAAGnC,EAAH,EAAGA,KAAMoC,EAAT,EAASA,GAAInC,EAAb,EAAaA,OAAb,OACjB,kBAAC0B,EAAD,CACIU,IAAKD,EACLR,SAAU5B,EACV6B,WAAY5B,EACZ6B,aAAc,kBAAKI,EAASE,W,YCP/BE,E,4MACjBvC,MAAQ,CACNiB,SAAU,CACR,CAACoB,GAAI,OAAQpC,KAAM,gBAAiBC,OAAQ,aAC5C,CAACmC,GAAI,OAAQpC,KAAM,iBAAkBC,OAAQ,aAC7C,CAACmC,GAAI,OAAQpC,KAAM,gBAAiBC,OAAQ,aAC5C,CAACmC,GAAI,OAAQpC,KAAM,iBAAkBC,OAAQ,cAE/CsC,OAAQ,I,EAaVC,WAAa,SAACxC,EAAMC,GAClB,IAAMwC,EAAU,CACdL,GAAIM,eACJ1C,OACAC,UAEF,EAAKI,UAAS,SAAAsC,GACV,MAAO,CACL3B,SAAS,GAAD,mBAAM2B,EAAU3B,UAAhB,CAA0ByB,S,EAK1CG,gBAAkB,WAAO,IAAD,EACO,EAAK7C,MAA1BiB,EADc,EACdA,SAAUuB,EADI,EACJA,OAElB,OAAOvB,EAASuB,QAAO,SAAAE,GAAO,OAC5BA,EAAQzC,KAAKmB,cAAc0B,SAASN,EAAOpB,mB,EAG/C2B,aAAe,SAAA3C,GACb,EAAKE,SAAS,CAAEkC,OAAQpC,EAAEC,OAAOE,S,EAEnCyC,cAAgB,SAAAC,GACd,EAAK3C,UAAS,SAAAsC,GACZ,MAAO,CACL3B,SAAU2B,EAAU3B,SAASuB,QAAO,qBAAGH,KAAgBY,U,kEApC3D,IAAMC,EAAoBC,aAAaC,QAAQ,YAG/CF,GAAqBlC,KAAKV,SAAS,CAACW,SAASoC,KAAKC,MAAMJ,O,yCAEtCK,EAAWX,GAC1BA,EAAU3B,WAAaD,KAAKhB,MAAMiB,UACnCkC,aAAaK,QAAQ,WAAYH,KAAKI,UAAUzC,KAAKhB,MAAMiB,a,+BAkC7D,IAAMiB,EAAkBlB,KAAK6B,kBAE3B,OACI,6BACI,yCACA,kBAAC,EAAD,CACE/B,aAAcE,KAAKyB,WACnBxB,SAAUD,KAAKhB,MAAMiB,WAEvB,wCACA,kBAACS,EAAD,CAAQC,eAAgBX,KAAK+B,eAC7B,kBAACd,EAAD,CACEC,gBAAiBA,EACjBC,SAAUnB,KAAKgC,qB,GAjEAvB,aCFjCiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e3b66197.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nexport default class ContactForm extends Component  {\n    state = {\n        name: '',\n        number: ''\n      }\n    handleChange = e => {\n      const { name } = e.target\n      this.setState({ [name]: e.target.value });\n    };\n\n    nameChecking () {\n        let check = false;\n        this.props.contacts.forEach(stateContact => {\n            if (stateContact.name.toLowerCase() === this.state.name.toLowerCase()) {\n             check = this.state.name;\n            }\n            })\n            return check\n    }\n\n    handleSubmit = evt => {\n      evt.preventDefault();\n\n        this.nameChecking()? alert(`${this.nameChecking()} is already in contact`):\n        this.props.onAddContact(this.state.name, this.state.number);\n    };\n\n    render() {\n        return (\n            <>\n                <form \n                    onSubmit={this.handleSubmit}\n                    >\n                    <label>\n                        <p>Name</p>\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            placeholder=\"Enter name\"\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <label>\n                        <p>Number</p>\n                        <input\n                            name=\"number\"\n                            type=\"text\"\n                            placeholder=\"Enter number\"\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <button type=\"submit\">Add contact </button>\n                </form>\n            </>\n        )\n    }\n    \n}","import React from 'react';\n\nexport default function Filter ({onHandleFilter}) {\n\n    return (\n        <>\n            <p>Find contacts by name</p>\n            <input \n                name=\"filter\"\n                type=\"text\"\n                onChange={e => onHandleFilter(e)}\n            />\n        </>\n    )\n}","import React from 'react';\n\nexport default function ContactListItem ({ itemName,itemNumber, onRemoveItem}) {\n\n    return (\n        <>\n        <li>\n            <p>{itemName}: {itemNumber}</p>\n            <span>        \n            <button type=\"button\" onClick={onRemoveItem}>Удалить</button></span>\n        </li>\n        </>\n    )\n}","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem'\n\nexport default function ContactList ({visibleContacts, onRemove}) {\n\n    return (\n        <>\n            <ul>\n                {visibleContacts.map(({ name, id, number}) => (\n                    <ContactListItem \n                        key={id}\n                        itemName={name}\n                        itemNumber={number}\n                        onRemoveItem={()=> onRemove(id)}\n                    />\n                    )\n                    )\n                    }\n            </ul>\n        </>\n    )\n}","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport Filter from './Filter/Filter'\nimport ContactList from './ContactList/ContactList'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class App extends Component {\n    state = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n      ],\n      filter: ''\n    }\n    componentDidMount() {\n      const persistedContacts = localStorage.getItem('contacts');\n\n\n      persistedContacts && this.setState({contacts:JSON.parse(persistedContacts)})\n    }\n    componentDidUpdate (prevProps, prevState) {\n      if(prevState.contacts !== this.state.contacts) {\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n      }\n    }\n    addContact = (name, number) => {\n      const contact = {\n        id: uuidv4(),\n        name,\n        number\n      };\n      this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, contact],\n          };\n      });\n    };\n  \n    getVisibleTasks = () => {\n      const { contacts, filter } = this.state;\n  \n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      );\n    };\n    handleFilter = e => {\n      this.setState({ filter: e.target.value });\n    }\n    removeContact = contactId => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n        };\n      });\n    };\n    render() {\n      const visibleContacts = this.getVisibleTasks();\n \n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm \n                  onAddContact={this.addContact}\n                  contacts={this.state.contacts}\n                />\n                <h2>Contacts</h2>\n                <Filter onHandleFilter={this.handleFilter} />\n                <ContactList \n                  visibleContacts={visibleContacts}\n                  onRemove={this.removeContact}/>\n            </div>\n      );\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}